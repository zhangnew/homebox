name: Build

env:
  REGISTRY_IMAGE: xgheaven/homebox

on:
  pull_request:
  workflow_call:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Print env
        run: |
          corepack enable
          echo "node version:" $(node -v)
          echo "npm version:" $(npm -v)
          echo "pnpm version:" $(pnpm -v)
      - name: Bootstrap
        run: |
          make bootstrap-web
      - name: Build frontend assets
        run: |
          make build-web
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/static

  build-binary:
    name: build-${{ matrix.platform.file }}
    runs-on: ${{ matrix.platform.runner }}
    needs: build-web
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            file: linux-arm64
            tool: gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-musl
            file: linux-arm64-musl
            tool: musl-tools
    env:
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      CC_aarch64_unknown_linux_musl: aarch64-linux-musl-gcc
	    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER: aarch64-linux-musl-gcc
    steps:
      - uses: actions/checkout@v4
      - name: Print env
        run: |
          echo "rustc version:" $(rustc --version)
          echo "cargo version:" $(cargo --version)
      - name: Download Static files
        uses: actions/download-artifact@v4
        with:
          name: web
          path: build/static
      - name: Install tool
        if: matrix.platform.tool
        run: sudo apt-get install ${{ matrix.platform.tool }}
      - name: Bootstrap
        run: |
          make bootstrap-server
      - name: Build
        run: make build-arch TARGET=${{ matrix.platform.target }} FILE=${{ matrix.platform.file }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: homebox-${{ matrix.platform.file }}
          path: build/arch

  release-tag:
    runs-on: ubuntu-latest
    needs: build-binary
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          pattern: homebox-*
          path: build/arch
          merge-multiple: true
      - name: Upload to Release
        run: |
          make pack-arch TAG=${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}